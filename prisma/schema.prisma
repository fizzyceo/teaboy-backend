generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  ADMIN
  TEABOY
  NORMAL_USER
}

model User { 
  user_id Int @id @default(autoincrement())

  name String
  email String @unique
  password String
  phone String?

  role USER_ROLE 

  can_manage_account Boolean @default(false) 
  can_manage_menu Boolean @default(false)
  can_place_order Boolean @default(false)

  sites UserSite[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Site {
  site_id Int @id @default(autoincrement())

  name String
  description String?
  phone String?
  image_url String?
  address String?

  employees UserSite[]
  spaces Space[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Space {
  space_id Int @id @default(autoincrement())
  name String

  menu Menu[]

  site_id Int
  site Site @relation(fields: [site_id], references: [site_id],onDelete: Cascade,onUpdate: Cascade)
}

model UserSite {
  user_id Int
  site_id Int

  user User @relation(fields: [user_id], references: [user_id], onDelete: Cascade, onUpdate: Cascade)
  site Site @relation(fields: [site_id], references: [site_id], onDelete: Cascade, onUpdate: Cascade)

  @@id([user_id, site_id])
}


model Menu {
  menu_id Int @id @default(autoincrement())
  name String?

  ask_for_name Boolean @default(false)
  ask_for_table Boolean @default(false)

  space_id Int
  space Space @relation(fields: [space_id], references: [space_id],onDelete: Cascade,onUpdate: Cascade)
 
  menu_items Menu_Item[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Menu_Item {
  menu_item_id Int @id @default(autoincrement())

  title String
  description String?
  price Float
  available Boolean @default(true)

  menu_id Int
  menu Menu @relation(fields: [menu_id], references: [menu_id],onDelete: Cascade,onUpdate: Cascade)

  categories Category[]
  order_items Order_Item[]
  item_images ItemImages[]
  options Menu_Item_Option[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Menu_Item_Option {
  menu_item_option_id Int @id @default(autoincrement())

  name String

  menu_item_id Int
  menu_item Menu_Item @relation(fields: [menu_item_id], references: [menu_item_id], onDelete: Cascade, onUpdate: Cascade)

  choices Menu_Item_Option_Choice[] @relation("OptionChoices") 

  default_choice_id Int? @unique
  default_choice Menu_Item_Option_Choice? @relation("DefaultChoice", fields: [default_choice_id], references: [menu_item_option_choice_id], onDelete: SetNull, onUpdate: Cascade) 
}

model Menu_Item_Option_Choice {
  menu_item_option_choice_id Int @id @default(autoincrement())

  name String

  menu_item_option_id Int
  menu_item_option Menu_Item_Option @relation("OptionChoices", fields: [menu_item_option_id], references: [menu_item_option_id], onDelete: Cascade, onUpdate: Cascade)

  order_item_choices Order_Item_Choice[]

  Menu_Item_Option Menu_Item_Option[] @relation("DefaultChoice")
}



model Order {
  order_id Int @id @default(autoincrement())

  order_number String

  customer_name String?
  table_number Int?

  scheduled_at DateTime?

  order_items Order_Item[]


  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}


enum OrderStatus {
  PENDING
  IN_PROGRESS
  READY
  DELIVERED
  CANCELLED
}

model Order_Item {
  order_item_id Int @id @default(autoincrement())
  note String?

  menu_item_id Int
  menu_item Menu_Item @relation(fields: [menu_item_id], references: [menu_item_id],onDelete: Cascade,onUpdate: Cascade)

  order_id Int
  order Order @relation(fields: [order_id], references: [order_id],onDelete: Cascade,onUpdate: Cascade)

  status OrderStatus

  choices Order_Item_Choice[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Order_Item_Choice {
  order_item_choice_id Int @id @default(autoincrement())

  order_item_id Int
  order_item Order_Item @relation(fields: [order_item_id], references: [order_item_id],onDelete: Cascade,onUpdate: Cascade)

  menu_item_option_choice_id Int
  menu_item_option_choice Menu_Item_Option_Choice @relation(fields: [menu_item_option_choice_id], references: [menu_item_option_choice_id],onDelete: Cascade,onUpdate: Cascade)
}

model Category {
  category_id Int @id @default(autoincrement())
  
  name String @unique

  menu_items Menu_Item[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ItemImages{
  item_image_id Int @id @default(autoincrement())
  
  image_url String

  menu_item_id Int
  menu_item Menu_Item @relation(fields: [menu_item_id], references: [menu_item_id],onDelete: Cascade,onUpdate: Cascade)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
